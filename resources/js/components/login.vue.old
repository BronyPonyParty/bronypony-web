<template>
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="text-black">
                    <div class="card-body p-5">
                        <div class="mb-md-5 mt-md-4 pb-5">
                            <div class="d-flex align-items-center justify-content-center">
                                <svg id="shield" xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 48 48">
                                    <path class="vi-primary" d="M24.516,41C8.586,34.828,10.032,13.8,10.032,13.8,19.675,15.578,24.516,7,24.516,7s4.83,8.578,14.452,6.8C38.968,13.8,40.411,34.828,24.516,41Z" fill="#2F8E6C"/>
                                    <path class="vi-accent" d="M17,25l5,5L32,20l-2-2-8,8-3-3Z" fill="#FFFFFF"/>
                                </svg>
                                <p class="fw-bold my-auto pt-2 d-sm-none" style="font-size: 25px;">ИСПУНТ</p>
                                <p class="fw-bold my-auto pt-2 d-none d-sm-block" style="font-size: 35px;">ИСПУНТ</p>
                            </div>

                            <div class="form-white my-4">
                                <label class="form-label">Логин</label>
                                <input ref="login" @mouseover="test" class="form-control form-control-lg outline-text my-input" @keyup.enter="authorization"/>
                            </div>

                            <div class="form-white mb-4">
                                <label class="form-label">Пароль</label>
                                <input type="password" ref="password" class="form-control form-control-lg outline-text" @keyup.enter="authorization"/>
                            </div>

                            <button class="btn btn-lg w-100 text-white outline-button" style="border: none; box-shadow: inherit;" type="submit" @click="authorization">Войти в систему</button>
                            <p class="small mt-4 pb-lg-2 float-end"><a class="text-decoration-none" href="#">Забыли пароль?</a></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>

<script>
function randomInteger(min, max) {
    // получить случайное число от (min-0.5) до (max+0.5)
    let rand = min - 0.5 + Math.random() * (max - min + 1);
    return Math.round(rand);
}
export default {

    data: () => ({
        offsetX: 0,
        offsetY: 0
    }),

    methods: {
        authorization() {
            // this.$store.dispatch('auth/auth', {
            //     login: this.$refs.login.value,
            //     password: this.$refs.password.value
            // });

            if (this.$refs.login.value === '') {
                this.$refs.login.classList.add('border-red');

                // this.$refs.login.style.animation = 'none';
                // this.$refs.login.offsetHeight;
                // this.$refs.login.style.animation = null;
            }
        },

        focus() {
            this.$refs.login.classList.remove('border-red');
            // this.$refs.login.style.animation = 'none';
            // this.$refs.login.offsetHeight;
            // this.$refs.login.style.animation = null;
        },

        test() {
            if (this.offsetX === 0) {
                this.offsetX = this.$refs.login.getBoundingClientRect().x;
                this.offsetY = this.$refs.login.getBoundingClientRect().y;
            }

            let W = this.$refs.login.getBoundingClientRect().width;
            let H = this.$refs.login.getBoundingClientRect().height;

            let maxX = 1920 - W - 20;
            let maxY = 947 - H - 20;

            let x = randomInteger(20, maxX);
            let y = randomInteger(20, maxY);
            x = x - this.offsetX;
            y = y - this.offsetY;

            // if ((this.offsetX + x) < 0 ) x = this.offsetX * -1;
            // if ((this.offsetY + y) < 0 ) y = this.offsetY * -1;
            //
            // if ((this.offsetX + x + W) > 1920) x = 1920 - this.offsetX - W;

            this.$refs.login.style.left = x + 'px';
            this.$refs.login.style.top = y + 'px';
        }
    }
}
</script>

<style lang="scss">
    .mainBox {
        width: 100%;
        height: 100%;
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: auto;
    }

    .authBlock {
        width: 350px;
        height: 510px;
        padding: 30px;
        border-radius: 10px;
    }

    .outline-text:focus {
        border-color: #5374D1;
        box-shadow: inherit;
    }

    .outline-button {
        background-color: #345DD1;
    }

    .outline-button:hover {
        background-color: #2F52B8;
    }
    .outline-button:active {
        background-color: #1E367E;
    }

    .my-input {
        position: relative;
        transition: 0.4s;
        left: 0;
        top: 0;
    }

    .border-red {
        //animation-iteration-count: 1;
        //animation: opacityToggle 5s;
        border-color: red;
        top: 100px;
        left: 800px;
    }

    //@keyframes opacityToggle{
    //    0%{
    //        border-color: red;
    //    }
    //    100%{
    //        border-color: #CED4DA;
    //    }
    //}
</style>
